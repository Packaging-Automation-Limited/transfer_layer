input { 
  file {
      path => "C:/Data1/*.log"
      mode => "read"
      file_completed_action => log_and_delete
      file_completed_log_path => "./ingested_files.log"
      #start_position => "beginning"
      #sincedb_path => "NUL"
   }
}

filter {
  #ruby { code => 'event.set("[@metadata][fields]", 1 + event.get("message").count(","))' }
  ruby { code => 'event.set("[@metadata][f]", event.get("message").split(",")[2])' }
  


  mutate {
      add_field => { "[@metadata][prod_index]" => "prod-index-pal" }
  }

  ################ Production Data ################

    if[@metadata][f] == "PROD" {
    csv {
      separator => ","
      columns => ["TIMESTAMP",	"Machine_ID", "FLAG", "Status", "User", "Product", "Recipe", "Tool", "Cycles", "Speed", "Total_Packs_Prod", "Run_Time_Prod", "Idle_Time_Prod", "Alarm_Time","Next_Machine","Printer"]
    }
    mutate { add_field => { "[@metadata][target_index]" => "%{[@metadata][prod_index]}" } }
  }

  else if[@metadata][f] == "ALARM" {
    csv {
      separator => ","
      columns => ["TIMESTAMP",	"Machine_ID", "FLAG", "Alarm_Desc", "Group"]
    }
    mutate { add_field => { "[@metadata][target_index]" => "%{[@metadata][prod_index]}" } }
  }

  else if[@metadata][f] == "AUDIT" {
    csv {
      separator => ","
      columns => ["TIMESTAMP",	"Machine_ID", "FLAG", "User_Group", "Description", "Value_Before", "Value_After"]
    }
    mutate { add_field => { "[@metadata][target_index]" => "%{[@metadata][prod_index]}" } }
  }



  mutate
  {
      remove_field => ["log"]
      remove_field => ["host"]
      remove_field => ["@version"]
      remove_field => ["event"]
      convert => {"Run_Time" => "integer"}
      convert => {"Total_Packs_Prod" => "integer"}
      convert => {"Run_Time_Prod" => "integer"}
      convert => {"Idle_Time_Prod" => "integer"}
      convert => {"Pause_Time" => "integer"}
      convert => {"Next_Machine" => "integer"}
      convert => {"Printer" => "integer"}
      convert => {"Speed" => "float"}
      convert => {"Progress" => "float"}

  }
  
  date 
  {
      match => ["Timestamp","dd/MM/YYYY HH:mm:ss"]
      ##timezone => "Europe/London"
      #locale => "en"
      target => "@timestamp"
  }
  
}

output {
  elasticsearch { 
    hosts => ["35.177.112.190:9200"]
    user => "elastic"
    password => "pyAmk_ODaS310V4EQh4U"
    index => "%{[@metadata][target_index]}"
  }
  elasticsearch { 
    #hosts => ["https://18.168.19.93:9200"]
    hosts => ["18.168.19.93:9200"]
    user => "elastic"
    password => "pVp1*btoybYYw9MhRrVA"
    index => "%{[@metadata][target_index]}"
    # ssl => true
    # cacert => "C:/ELK/logstash-8.2.2/cert/http_ca.crt"
  }
  stdout { }
}
